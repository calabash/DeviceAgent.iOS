// class-dump results processed by bin/class-dump/dump.rb
//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Nov 26 2020 14:08:26).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/Foundation.h>
#import <CoreGraphics/CoreGraphics.h>
#import <XCTest/XCUIElementTypes.h>
#import "CDStructures.h"
@protocol OS_dispatch_queue;
@protocol OS_xpc_object;

#import <objc/NSObject.h>

#import "XCUIApplicationProcessDelegate-Protocol.h"

@class NSString, XCAccessibilityElement, XCUIApplicationProcess;
@protocol XCUIDevice, XCUIIssueDiagnosticsProviding;

@interface XCUIApplicationImpl : NSObject <XCUIApplicationProcessDelegate>
{
    BOOL _codeCoverageEnabled;
    BOOL _hasValidAlertCount;
    BOOL _previousOnDemandAutomationSessionRequestFailed;
    NSString *_path;
    NSString *_bundleID;
    XCUIApplicationProcess *_currentProcess;
    id <XCUIDevice> _device;
}

@property(readonly) XCAccessibilityElement *accessibilityElement;
@property(readonly) BOOL activated;
@property(readonly) NSUInteger alertCount;
@property(readonly) BOOL background;
@property(readonly, copy) NSString *bundleID;
@property BOOL codeCoverageEnabled;
@property(retain, nonatomic) XCUIApplicationProcess *currentProcess;
@property(readonly) id <XCUIDevice> device;
@property(readonly) id <XCUIIssueDiagnosticsProviding> diagnosticsProvider;
@property(readonly) BOOL foreground;
@property BOOL hasValidAlertCount;
@property(readonly, copy) NSString *path;
@property BOOL previousOnDemandAutomationSessionRequestFailed;
@property(nonatomic) NSInteger processID;
@property(readonly) BOOL running;
@property(nonatomic) NSUInteger state;
@property(readonly) BOOL suspended;

+ (id)keyPathsForValuesAffectingActivated;
+ (id)keyPathsForValuesAffectingBackground;
+ (id)keyPathsForValuesAffectingForeground;
+ (id)keyPathsForValuesAffectingHasCurrentProcess;
+ (id)keyPathsForValuesAffectingRunning;
+ (id)keyPathsForValuesAffectingState;
+ (id)keyPathsForValuesAffectingSuspended;
- (void)_activate;
- (void)_activateForPlatform;
- (id)_activationExpectation;
- (void)_awaitValidCurrentProcess;
- (void)_launchUsingPlatformWithArguments:(id)arg1 environment:(id)arg2;
- (void)_launchUsingXcodeWithArguments:(id)arg1 environment:(id)arg2;
- (void)_launchWithRequest:(id)arg1;
- (void)_waitForLaunchProgressWithToken:(id)arg1;
- (void)_waitForValidPID;
- (void)_waitOnActivationExpectation:(id)arg1;
- (void)applicationProcessAutomationSessionRequestFailed:(id)arg1;
- (BOOL)applicationProcessShouldRequestAutomationSession:(id)arg1;
- (void)handleCrashUnderSymbol:(id)arg1;
- (BOOL)hasCurrentProcess;
- (id)initWithPath:(id)arg1 bundleID:(id)arg2;
- (id)initWithPath:(id)arg1 bundleID:(id)arg2 device:(id)arg3;
- (void)resetAlertCount;
- (void)resetAuthorizationStatusForResource:(NSInteger)arg1;
- (void)serviceOpenRequest:(id)arg1;
- (BOOL)shouldWaitForAutomationSessionWhenUsingPlatformLauncher:(BOOL)arg1;
- (void)terminate;
- (void)waitForAccessibilityActive;
- (BOOL)waitForState:(NSUInteger)arg1 timeout:(double)arg2;
- (BOOL)waitForViewControllerViewDidDisappearWithTimeout:(double)arg1 error:(id *)arg2;


@end

