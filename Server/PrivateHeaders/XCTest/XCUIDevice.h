// class-dump results processed by bin/class-dump/dump.rb
//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Foundation/Foundation.h>
#import <CoreGraphics/CoreGraphics.h>
#import <XCTest/XCUIElementTypes.h>
#import "CDStructures.h"
#import "XCUIApplicationMonitor-Protocol.h"
#import "XCUIApplicationAutomationSessionProviding-Protocol.h"
#import "XCUIScreenDataSource-Protocol.h"
#import "XCUIEventSynthesizing-Protocol.h"
#import "XCUIApplicationManaging-Protocol.h"
#import "XCUIDeviceEventAndStateInterface-Protocol.h"
#import "XCUIScreen.h"
@protocol OS_dispatch_queue;
@protocol OS_xpc_object;

#import <UIKit/UIDevice.h>

@class NSString, XCUIRemote, XCUISiriService, XCUITestContext;


@protocol XCUIAccessibilityInterface;
@protocol XCUIXcodeApplicationManaging;

@protocol XCUIAccessibilityInterface;
@protocol XCUIXcodeApplicationManaging;

@interface XCUIDevice : NSObject
{
    BOOL _isLocal;
    BOOL _isSimulatorDevice;
    NSInteger _platform;
    id <XCUIAccessibilityInterface> _accessibilityInterface;
    id <XCUIApplicationMonitor> _applicationMonitor;
    id <XCUIEventSynthesizing> _eventSynthesizer;
    id <XCUIApplicationManaging> _platformApplicationManager;
    id <XCUIXcodeApplicationManaging> _xcodeApplicationManager;
    id <XCUIDeviceEventAndStateInterface> _deviceEventAndStateInterface;
    id <XCUIApplicationAutomationSessionProviding> _applicationAutomationSessionProvider;
    XCUISiriService *_siriService;
    id <XCUIScreenDataSource> _screenDataSource;
    NSString *_uniqueIdentifier;
    XCUITestContext *_testContext;
    XCUIRemote *_remote;
}

@property(readonly) id <XCUIAccessibilityInterface> accessibilityInterface;
@property(readonly) id <XCUIApplicationAutomationSessionProviding> applicationAutomationSessionProvider;
@property(readonly) id <XCUIApplicationMonitor> applicationMonitor;
@property(readonly) id <XCUIDeviceEventAndStateInterface> deviceEventAndStateInterface;
@property(readonly) id <XCUIEventSynthesizing> eventSynthesizer;
@property(readonly) BOOL isLocal;
@property(readonly) BOOL isSimulatorDevice;
@property(readonly) XCUIScreen *mainScreen;
@property(nonatomic) UIDeviceOrientation orientation;
@property(readonly) NSInteger platform;
@property(readonly) id <XCUIApplicationManaging> platformApplicationManager;
@property(readonly) id <XCUIScreenDataSource> screenDataSource;
@property(readonly, copy) NSArray *screens;
@property(readonly) XCUISiriService *siriService;
@property(readonly) XCUITestContext *testContext;
@property(readonly) NSString *uniqueIdentifier;
@property(readonly) id <XCUIXcodeApplicationManaging> xcodeApplicationManager;

+ (id)localDevice;
+ (XCUIDevice *)sharedDevice;
- (void)_setOrientation:(NSInteger)arg1;
- (void)_silentPressButton:(NSInteger)arg1;
- (id)accessibilityInterface;
- (id)applicationAutomationSessionProvider;
- (id)applicationMonitor;
- (id)deviceEventAndStateInterface;
- (id)eventSynthesizer;
- (void)holdHomeButtonForDuration:(double)arg1;
- (id)initLocalDeviceWithPlatform:(NSInteger)arg1;
- (BOOL)isLocal;
- (BOOL)isSimulatorDevice;
- (id)mainScreen;
- (id)mainScreenOrError:(id *)arg1;
- (BOOL)performDeviceEvent:(id)arg1 error:(id *)arg2;
- (NSInteger)platform;
- (id)platformApplicationManager;
- (void)pressButton:(NSInteger)arg1;
- (void)pressLockButton;
- (id)remote;
- (void)remoteAutomationSessionDidDisconnect:(id)arg1;
- (void)rotateDigitalCrown:(double)arg1 velocity:(double)arg2;
- (id)screenDataSource;
- (id)screens;
- (id)screensOrError:(id *)arg1;
- (BOOL)supportsPressureInteraction;
- (id)testContext;
- (id)uniqueIdentifier;
- (id)xcodeApplicationManager;

@end

