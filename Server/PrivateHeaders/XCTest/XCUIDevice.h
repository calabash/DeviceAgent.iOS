// class-dump results processed by bin/class-dump/dump.rb
//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Apr 12 2019 07:16:25).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/Foundation.h>
#import <CoreGraphics/CoreGraphics.h>
#import <XCTest/XCUIElementTypes.h>
#import "CDStructures.h"
@protocol OS_dispatch_queue;
@protocol OS_xpc_object;

#import <objc/NSObject.h>

#import "XCUIIOSDevice-Protocol.h"

#import <UIKit/UIDevice.h>

@class NSArray, NSString, XCUIScreen, XCUISiriService, XCUITestContext;
@protocol XCUIAccessibilityInterface, XCUIApplicationAutomationSessionProviding, XCUIApplicationManaging, XCUIApplicationMonitor, XCUIDeviceEventAndStateInterface, XCUIEventSynthesizing, XCUIScreenDataSource, XCUIXcodeApplicationManaging;


@protocol XCUIAccessibilityInterface;
@protocol XCUIXcodeApplicationManaging;

@interface XCUIDevice : NSObject <XCUIIOSDevice>
{
    BOOL _isLocal;
    BOOL _isSimulatorDevice;
    NSInteger _platform;
    id <XCUIAccessibilityInterface> _accessibilityInterface;
    id <XCUIApplicationMonitor> _applicationMonitor;
    id <XCUIEventSynthesizing> _eventSynthesizer;
    id <XCUIApplicationManaging> _platformApplicationManager;
    id <XCUIXcodeApplicationManaging> _xcodeApplicationManager;
    id <XCUIDeviceEventAndStateInterface> _deviceEventAndStateInterface;
    id <XCUIApplicationAutomationSessionProviding> _applicationAutomationSessionProvider;
    XCUISiriService *_siriService;
    id <XCUIScreenDataSource> _screenDataSource;
    NSString *_uniqueIdentifier;
    XCUITestContext *_testContext;
}

@property(readonly) id <XCUIAccessibilityInterface> accessibilityInterface;
@property(readonly) id <XCUIApplicationAutomationSessionProviding> applicationAutomationSessionProvider;
@property(readonly) id <XCUIApplicationMonitor> applicationMonitor;
@property(readonly) id <XCUIDeviceEventAndStateInterface> deviceEventAndStateInterface;
@property(readonly) id <XCUIEventSynthesizing> eventSynthesizer;
@property(readonly) BOOL isLocal;
@property(readonly) BOOL isSimulatorDevice;
@property(readonly) XCUIScreen *mainScreen;
@property(nonatomic) UIDeviceOrientation orientation;
@property(readonly) NSInteger platform;
@property(readonly) id <XCUIApplicationManaging> platformApplicationManager;
@property(readonly) id <XCUIScreenDataSource> screenDataSource;
@property(readonly, copy) NSArray *screens;
@property(readonly) XCUISiriService *siriService;
@property(readonly) XCUITestContext *testContext;
@property(readonly) NSString *uniqueIdentifier;
@property(readonly) id <XCUIXcodeApplicationManaging> xcodeApplicationManager;

+ (id)localDevice;
+ (XCUIDevice *)sharedDevice;
- (void)_setOrientation:(NSInteger)arg1;
- (void)_silentPressButton:(NSInteger)arg1;
- (void)holdHomeButtonForDuration:(double)arg1;
- (id)initLocalDeviceWithPlatform:(NSInteger)arg1;
- (id)mainScreenOrError:(id *)arg1;
- (BOOL)performDeviceEvent:(id)arg1 error:(id *)arg2;
- (void)pressButton:(NSInteger)arg1;
- (void)pressLockButton;
- (void)rotateDigitalCrown:(double)arg1 velocity:(double)arg2;
- (id)screensOrError:(id *)arg1;


@end

